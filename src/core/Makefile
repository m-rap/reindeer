#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I../include
CFLAGS = -std=c++0x -Wall -Wno-unused-variable -Wno-strict-aliasing -DUSE_OPENGL -DGLEW_STATIC
RESINC = 
LIBDIR = -L../lib/linux
LIB = -lBulletDynamics -lBulletCollision -lLinearMath -lglfw3 -lGLEW -lGL -lX11 -lXxf86vm -lpthread -lXrandr -lXi
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/linux/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/linux/Debug/Reindeer

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/linux/Release
DEP_RELEASE = 
OUT_RELEASE = bin/linux/Release/Reindeer

OBJ_DEBUG = $(OBJDIR_DEBUG)/config.o $(OBJDIR_DEBUG)/PhysicalObject.o $(OBJDIR_DEBUG)/RdrHelper.o $(OBJDIR_DEBUG)/World.o $(OBJDIR_DEBUG)/OpenGLWorld.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/objloader.o $(OBJDIR_DEBUG)/shader.o $(OBJDIR_DEBUG)/texture.o $(OBJDIR_DEBUG)/BaseRenderer.o $(OBJDIR_DEBUG)/BoxObject.o $(OBJDIR_DEBUG)/Camera.o $(OBJDIR_DEBUG)/Drawable.o $(OBJDIR_DEBUG)/BaseObject.o $(OBJDIR_DEBUG)/GLDebugDrawer.o $(OBJDIR_DEBUG)/LegacyOpenGLRenderer.o $(OBJDIR_DEBUG)/ModelObject.o $(OBJDIR_DEBUG)/OpenGLRenderer.o $(OBJDIR_DEBUG)/Light.o $(OBJDIR_DEBUG)/OpenGLLight.o $(OBJDIR_DEBUG)/LegacyOpenGLLight.o $(OBJDIR_DEBUG)/Container.o $(OBJDIR_DEBUG)/GlfwContainer.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/config.o $(OBJDIR_RELEASE)/PhysicalObject.o $(OBJDIR_RELEASE)/RdrHelper.o $(OBJDIR_RELEASE)/World.o $(OBJDIR_RELEASE)/OpenGLWorld.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/objloader.o $(OBJDIR_RELEASE)/shader.o $(OBJDIR_RELEASE)/texture.o $(OBJDIR_RELEASE)/BaseRenderer.o $(OBJDIR_RELEASE)/BoxObject.o $(OBJDIR_RELEASE)/Camera.o $(OBJDIR_RELEASE)/Drawable.o $(OBJDIR_RELEASE)/BaseObject.o $(OBJDIR_RELEASE)/GLDebugDrawer.o $(OBJDIR_RELEASE)/LegacyOpenGLRenderer.o $(OBJDIR_RELEASE)/ModelObject.o $(OBJDIR_RELEASE)/OpenGLRenderer.o $(OBJDIR_RELEASE)/Light.o $(OBJDIR_RELEASE)/OpenGLLight.o $(OBJDIR_RELEASE)/LegacyOpenGLLight.o $(OBJDIR_RELEASE)/Container.o $(OBJDIR_RELEASE)/GlfwContainer.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/linux/Debug || mkdir -p bin/linux/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/config.o: config.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c config.cpp -o $(OBJDIR_DEBUG)/config.o

$(OBJDIR_DEBUG)/PhysicalObject.o: PhysicalObject.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c PhysicalObject.cpp -o $(OBJDIR_DEBUG)/PhysicalObject.o

$(OBJDIR_DEBUG)/RdrHelper.o: RdrHelper.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c RdrHelper.cpp -o $(OBJDIR_DEBUG)/RdrHelper.o

$(OBJDIR_DEBUG)/World.o: World.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c World.cpp -o $(OBJDIR_DEBUG)/World.o

$(OBJDIR_DEBUG)/OpenGLWorld.o: OpenGLWorld.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c OpenGLWorld.cpp -o $(OBJDIR_DEBUG)/OpenGLWorld.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/objloader.o: objloader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c objloader.cpp -o $(OBJDIR_DEBUG)/objloader.o

$(OBJDIR_DEBUG)/shader.o: shader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c shader.cpp -o $(OBJDIR_DEBUG)/shader.o

$(OBJDIR_DEBUG)/texture.o: texture.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c texture.cpp -o $(OBJDIR_DEBUG)/texture.o

$(OBJDIR_DEBUG)/BaseRenderer.o: BaseRenderer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c BaseRenderer.cpp -o $(OBJDIR_DEBUG)/BaseRenderer.o

$(OBJDIR_DEBUG)/BoxObject.o: BoxObject.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c BoxObject.cpp -o $(OBJDIR_DEBUG)/BoxObject.o

$(OBJDIR_DEBUG)/Camera.o: Camera.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Camera.cpp -o $(OBJDIR_DEBUG)/Camera.o

$(OBJDIR_DEBUG)/Drawable.o: Drawable.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Drawable.cpp -o $(OBJDIR_DEBUG)/Drawable.o

$(OBJDIR_DEBUG)/BaseObject.o: BaseObject.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c BaseObject.cpp -o $(OBJDIR_DEBUG)/BaseObject.o

$(OBJDIR_DEBUG)/GLDebugDrawer.o: GLDebugDrawer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c GLDebugDrawer.cpp -o $(OBJDIR_DEBUG)/GLDebugDrawer.o

$(OBJDIR_DEBUG)/LegacyOpenGLRenderer.o: LegacyOpenGLRenderer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c LegacyOpenGLRenderer.cpp -o $(OBJDIR_DEBUG)/LegacyOpenGLRenderer.o

$(OBJDIR_DEBUG)/ModelObject.o: ModelObject.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ModelObject.cpp -o $(OBJDIR_DEBUG)/ModelObject.o

$(OBJDIR_DEBUG)/OpenGLRenderer.o: OpenGLRenderer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c OpenGLRenderer.cpp -o $(OBJDIR_DEBUG)/OpenGLRenderer.o

$(OBJDIR_DEBUG)/Light.o: Light.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Light.cpp -o $(OBJDIR_DEBUG)/Light.o

$(OBJDIR_DEBUG)/OpenGLLight.o: OpenGLLight.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c OpenGLLight.cpp -o $(OBJDIR_DEBUG)/OpenGLLight.o

$(OBJDIR_DEBUG)/LegacyOpenGLLight.o: LegacyOpenGLLight.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c LegacyOpenGLLight.cpp -o $(OBJDIR_DEBUG)/LegacyOpenGLLight.o
    
$(OBJDIR_DEBUG)/Container.o: Container.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Container.cpp -o $(OBJDIR_DEBUG)/Container.o

$(OBJDIR_DEBUG)/GlfwContainer.o: GlfwContainer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c GlfwContainer.cpp -o $(OBJDIR_DEBUG)/GlfwContainer.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/linux/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/linux/Release || mkdir -p bin/linux/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/config.o: config.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c config.cpp -o $(OBJDIR_RELEASE)/config.o

$(OBJDIR_RELEASE)/PhysicalObject.o: PhysicalObject.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c PhysicalObject.cpp -o $(OBJDIR_RELEASE)/PhysicalObject.o

$(OBJDIR_RELEASE)/RdrHelper.o: RdrHelper.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c RdrHelper.cpp -o $(OBJDIR_RELEASE)/RdrHelper.o

$(OBJDIR_RELEASE)/World.o: World.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c World.cpp -o $(OBJDIR_RELEASE)/World.o

$(OBJDIR_RELEASE)/OpenGLWorld.o: OpenGLWorld.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c OpenGLWorld.cpp -o $(OBJDIR_RELEASE)/OpenGLWorld.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/objloader.o: objloader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c objloader.cpp -o $(OBJDIR_RELEASE)/objloader.o

$(OBJDIR_RELEASE)/shader.o: shader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c shader.cpp -o $(OBJDIR_RELEASE)/shader.o

$(OBJDIR_RELEASE)/texture.o: texture.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c texture.cpp -o $(OBJDIR_RELEASE)/texture.o

$(OBJDIR_RELEASE)/BaseRenderer.o: BaseRenderer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c BaseRenderer.cpp -o $(OBJDIR_RELEASE)/BaseRenderer.o

$(OBJDIR_RELEASE)/BoxObject.o: BoxObject.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c BoxObject.cpp -o $(OBJDIR_RELEASE)/BoxObject.o

$(OBJDIR_RELEASE)/Camera.o: Camera.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Camera.cpp -o $(OBJDIR_RELEASE)/Camera.o

$(OBJDIR_RELEASE)/Drawable.o: Drawable.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Drawable.cpp -o $(OBJDIR_RELEASE)/Drawable.o

$(OBJDIR_RELEASE)/BaseObject.o: BaseObject.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c BaseObject.cpp -o $(OBJDIR_RELEASE)/BaseObject.o

$(OBJDIR_RELEASE)/GLDebugDrawer.o: GLDebugDrawer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c GLDebugDrawer.cpp -o $(OBJDIR_RELEASE)/GLDebugDrawer.o

$(OBJDIR_RELEASE)/LegacyOpenGLRenderer.o: LegacyOpenGLRenderer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c LegacyOpenGLRenderer.cpp -o $(OBJDIR_RELEASE)/LegacyOpenGLRenderer.o

$(OBJDIR_RELEASE)/ModelObject.o: ModelObject.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ModelObject.cpp -o $(OBJDIR_RELEASE)/ModelObject.o

$(OBJDIR_RELEASE)/OpenGLRenderer.o: OpenGLRenderer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c OpenGLRenderer.cpp -o $(OBJDIR_RELEASE)/OpenGLRenderer.o

$(OBJDIR_RELEASE)/Light.o: Light.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Light.cpp -o $(OBJDIR_RELEASE)/Light.o

$(OBJDIR_RELEASE)/OpenGLLight.o: OpenGLLight.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c OpenGLLight.cpp -o $(OBJDIR_RELEASE)/OpenGLLight.o

$(OBJDIR_RELEASE)/LegacyOpenGLLight.o: LegacyOpenGLLight.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c LegacyOpenGLLight.cpp -o $(OBJDIR_RELEASE)/LegacyOpenGLLight.o

$(OBJDIR_RELEASE)/Container.o: Container.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Container.cpp -o $(OBJDIR_RELEASE)/Container.o

$(OBJDIR_RELEASE)/GlfwContainer.o: GlfwContainer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c GlfwContainer.cpp -o $(OBJDIR_RELEASE)/GlfwContainer.o
    
clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/linux/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

